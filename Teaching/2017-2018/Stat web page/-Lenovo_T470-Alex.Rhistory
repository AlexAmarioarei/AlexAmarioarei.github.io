install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
t1 = "-"
t1data = "-"
tab = data.frame(Tema = c(t1),
Data = c(t1data),
Solution = c(t1sol))
t1sol = "-"
tab = data.frame(Tema = c(t1),
Data = c(t1data),
Solution = c(t1sol))
tab
kable(tab,
col.names = c("Tema", "Data de predare", "Solutii"),
align = "ccc")
library(knitr)
kable(tab,
col.names = c("Tema", "Data de predare", "Solutii"),
align = "ccc")
# Statistica
#------------
library(tidyverse)
library(readxl)
mate = read_excel("students/Grupe_anul_III_Matematica_2017-2018.xlsx")
mate = read_excel("students/GRUPE_Matematica_an_III_2017-2018.xlsx")
View(mate)
mate_name = mate[[2]]
grupa_mate = rep(301, length(mate_name))
mate_name = paste(mate[[2:4]], collapse = "")
mate = read_excel("students/GRUPE_Matematica_an_III_2017-2018.xlsx", skip = 1)
mate[[2:4]]
mate[2:4]
mate_name = paste(mate[2:4], collapse = "")
mate_name
mate_name = paste(mate[2:4])
mate_name
mate_name = apply(mate[ , 2:4] , 1 , paste , collapse = "" )
mate_name
mate_name = apply(mate[ , 2:4] , 1 , paste , collapse = " ")
mate_name
grupa_mate = rep(301, length(mate_name))
mate_info = read_excel("students/GRUPE_Matematica-Informatica_an_III_2017-2018.xlsx", skip = 1)
View(mate_info)
mate_info_name = apply(mate_info[ , 2:4] , 1 , paste , collapse = " ")
grupa_mate_info = rep(311, length(mate_info_name))
mate_info_name
mate_aplicata = read_excel("students/GRUPE_Matematici_aplicate_an_III_2017-2018.xlsx", skip = 1)
mate_aplicata_name = apply(mate_aplicata[ , 2:4] , 1 , paste , collapse = " ")
grupa_mate_aplicata = rep(321, length(mate_aplicata_name))
mate_aplicata_name
mate_all_name = c(mate_name, mate_info_name, mate_aplicata_name)
grupa_all = c(grupa_mate, grupa_mate_info, grupa_mate_aplicata)
s = length(mate_all_name)
mate_all_name = enc2utf8(mate_all_name)
statistica = data.frame(Nume = character(s), Grupa = numeric(s), Tema_1 = numeric(s), Tema_2 = numeric(s),
Tema_3 = numeric(s), Tema_4 = numeric(s), Tema_5 = numeric(s), Tema_6 = numeric(s),
Proiect = numeric(s), Examen = numeric(s),
Total = numeric(s))
statistica$Nume = mate_all_name
statistica$Grupa = grupa_all
write.csv(statistica, "students/Tabel_Statistica.csv", row.names = FALSE, fileEncoding = "UTF-8")
statistica$Total = "-"
write.csv(statistica, "students/Tabel_Statistica.csv", row.names = FALSE, fileEncoding = "UTF-8")
stat_tab_R1 = read.csv("results/Tabel_Statistica.csv", stringsAsFactors = FALSE)
View(stat_tab_R1)
mate = read_excel("students/GRUPE_Matematica_an_III_2017-2018.xlsx", skip = 1)
mate_name = apply(mate[ , 2:4] , 1 , paste , collapse = " ")
grupa_mate = rep(301, length(mate_name))
mate_info = read_excel("students/GRUPE_Matematica-Informatica_an_III_2017-2018.xlsx", skip = 1)
mate_info_name = apply(mate_info[ , 2:4] , 1 , paste , collapse = " ")
grupa_mate_info = rep(311, length(mate_info_name))
mate_aplicata = read_excel("students/GRUPE_Matematici_aplicate_an_III_2017-2018.xlsx", skip = 1)
mate_aplicata_name = apply(mate_aplicata[ , 2:4] , 1 , paste , collapse = " ")
grupa_mate_aplicata = rep(321, length(mate_aplicata_name))
mate_all_name = c(mate_name, mate_info_name, mate_aplicata_name)
grupa_all = c(grupa_mate, grupa_mate_info, grupa_mate_aplicata)
s = length(mate_all_name)
statistica = data.frame(Nume = character(s), Grupa = numeric(s), Tema_1 = numeric(s), Tema_2 = numeric(s),
Tema_3 = numeric(s), Tema_4 = numeric(s), Tema_5 = numeric(s), Tema_6 = numeric(s),
Proiect = numeric(s), Examen = numeric(s),
Total = numeric(s))
statistica$Nume = mate_all_name
statistica$Grupa = grupa_all
statistica$Total = "-"
write.csv(statistica, "students/Tabel_Statistica.csv", row.names = FALSE, fileEncoding = "UTF-8")
mate_all_name
View(mate)
webshot::install_phantomjs()
knitr::opts_chunk$set(echo = TRUE)
# stat_tab_R1 = read.csv("results/Tabel_Statistica.csv", stringsAsFactors = FALSE)
stat_tab_R1 = read.csv("results/Tabel_Statistica_feb_2018.csv", stringsAsFactors = FALSE)
# stat_tab_R1 = read.csv("results/Tabel_Statistica.csv", stringsAsFactors = FALSE)
stat_tab_R1 = read.csv("results/Tabel_Statistica_feb_2018.csv", stringsAsFactors = FALSE)
# stat_tab_R1 = stat_tab_R1[,-1]
# create 19 breaks and 20 rgb color values ranging from white to red
# brks <- quantile(as.numeric(stat_tab$Total), probs = seq(.05, .95, .05), na.rm = TRUE)
# clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
# {paste0("rgb(255,", ., ",", ., ")")}
# fix some left 2 columns and right 1 column
datatable(
stat_tab_R1, class = 'cell-border stripe',
# style = 'bootstrap',
extensions = c('FixedColumns', 'Buttons', 'Scroller'),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 2:5)),
dom = c('Bfrtip'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2, rightColumns = 1),
buttons = c('csv', 'excel', 'pdf', 'print'),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#2f7acd', 'color': '#fff'});",
"}"),
deferRender = TRUE
)
)%>% formatStyle('Total',
# backgroundColor = styleInterval(4.9, c('#f78080', '#60cbf2')),
backgroundColor = styleEqual(c("Absent", "3", "4", "5", "6", "7", "8", "9", "10"),
c('#ffff99', '#f78080', '#f78080', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff')),
fontWeight = 'bold') %>%
formatStyle('Total',
target = 'row',
backgroundColor = styleEqual(c("3", "4", "Absent"), c('#f78080', '#f78080', '#ffff99')))
library(knitr)
library(DT)
library(tidyverse)
# stat_tab_R1 = read.csv("results/Tabel_Statistica.csv", stringsAsFactors = FALSE)
stat_tab_R1 = read.csv("results/Tabel_Statistica_feb_2018.csv", stringsAsFactors = FALSE)
# stat_tab_R1 = stat_tab_R1[,-1]
# create 19 breaks and 20 rgb color values ranging from white to red
# brks <- quantile(as.numeric(stat_tab$Total), probs = seq(.05, .95, .05), na.rm = TRUE)
# clrs <- round(seq(255, 40, length.out = length(brks) + 1), 0) %>%
# {paste0("rgb(255,", ., ",", ., ")")}
# fix some left 2 columns and right 1 column
datatable(
stat_tab_R1, class = 'cell-border stripe',
# style = 'bootstrap',
extensions = c('FixedColumns', 'Buttons', 'Scroller'),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 2:5)),
dom = c('Bfrtip'),
scrollX = TRUE,
fixedColumns = list(leftColumns = 2, rightColumns = 1),
buttons = c('csv', 'excel', 'pdf', 'print'),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#2f7acd', 'color': '#fff'});",
"}"),
deferRender = TRUE
)
)%>% formatStyle('Total',
# backgroundColor = styleInterval(4.9, c('#f78080', '#60cbf2')),
backgroundColor = styleEqual(c("Absent", "3", "4", "5", "6", "7", "8", "9", "10"),
c('#ffff99', '#f78080', '#f78080', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff', '#9ddcff')),
fontWeight = 'bold') %>%
formatStyle('Total',
target = 'row',
backgroundColor = styleEqual(c("3", "4", "Absent"), c('#f78080', '#f78080', '#ffff99')))
stat_tab_R1$Total = round(stat_tab_R1$Total, 2)
View(stat_tab_R1)
install.packages(c("backports", "bibliometrix", "blogdown", "bookdown", "bookdownplus", "broom", "car", "checkmate", "checkpoint", "circlize", "corrplot", "cowplot", "curl", "data.table", "ddalpha", "dendextend", "devtools", "dfoptim", "digest", "dotCall64", "dplyr", "DRR", "DT", "effects", "ellipse", "FactoMineR", "fields", "forecast", "fpc", "gdtools", "geojson", "geojsonio", "geosphere", "ggiraph", "ggpubr", "ggrepel", "ggsci", "git2r", "glue", "haven", "Hmisc", "hms", "htmlTable", "irlba", "jqr", "kableExtra", "knitr", "lava", "lazyeval", "lubridate", "lwgeom", "mapview", "Matrix", "mclust", "mgcv", "multcomp", "mvtnorm", "officer", "openssl", "pbapply", "purrr", "quantmod", "quantreg", "R.utils", "randomForestSRC", "Rcmdr", "RcmdrMisc", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "reshape2", "rgl", "rio", "rlang", "rmarkdown", "robustbase", "rprojroot", "rscopus", "RSNNS", "rstudioapi", "Rttf2pt1", "rvg", "satellite", "SensoMineR", "servr", "shape", "shinyjs", "showtext", "showtextdb", "sjlabelled", "sjmisc", "slam", "spam", "spData", "stringi", "sysfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tseries", "TTR", "viridis", "viridisLite", "webshot", "withr", "xml2", "xts", "yaml", "zoo"))
install.packages(c("backports", "bibliometrix", "blogdown", "bookdown", "bookdownplus", "broom", "car", "checkmate", "checkpoint", "circlize", "corrplot", "cowplot", "curl", "data.table", "ddalpha", "dendextend", "devtools", "dfoptim", "digest", "dotCall64", "dplyr", "DRR", "DT", "effects", "ellipse", "FactoMineR", "fields", "forecast", "fpc", "gdtools", "geojson", "geojsonio", "geosphere", "ggiraph", "ggpubr", "ggrepel", "ggsci", "git2r", "glue", "haven", "Hmisc", "hms", "htmlTable", "irlba", "jqr", "kableExtra", "knitr", "lava", "lazyeval", "lubridate", "lwgeom", "mapview", "Matrix", "mclust", "mgcv", "multcomp", "mvtnorm", "officer", "openssl", "pbapply", "purrr", "quantmod", "quantreg", "R.utils", "randomForestSRC", "Rcmdr", "RcmdrMisc", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "reshape2", "rgl", "rio", "rlang", "rmarkdown", "robustbase", "rprojroot", "rscopus", "RSNNS", "rstudioapi", "Rttf2pt1", "rvg", "satellite", "SensoMineR", "servr", "shape", "shinyjs", "showtext", "showtextdb", "sjlabelled", "sjmisc", "slam", "spam", "spData", "stringi", "sysfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tseries", "TTR", "viridis", "viridisLite", "webshot", "withr", "xml2", "xts", "yaml", "zoo"))
install.packages(c("backports", "bibliometrix", "blogdown", "bookdown", "bookdownplus", "broom", "car", "checkmate", "checkpoint", "circlize", "corrplot", "cowplot", "curl", "data.table", "ddalpha", "dendextend", "devtools", "dfoptim", "digest", "dotCall64", "dplyr", "DRR", "DT", "effects", "ellipse", "FactoMineR", "fields", "forecast", "fpc", "gdtools", "geojson", "geojsonio", "geosphere", "ggiraph", "ggpubr", "ggrepel", "ggsci", "git2r", "glue", "haven", "Hmisc", "hms", "htmlTable", "irlba", "jqr", "kableExtra", "knitr", "lava", "lazyeval", "lubridate", "lwgeom", "mapview", "Matrix", "mclust", "mgcv", "multcomp", "mvtnorm", "officer", "openssl", "pbapply", "purrr", "quantmod", "quantreg", "R.utils", "randomForestSRC", "Rcmdr", "RcmdrMisc", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "reshape2", "rgl", "rio", "rlang", "rmarkdown", "robustbase", "rprojroot", "rscopus", "RSNNS", "rstudioapi", "Rttf2pt1", "rvg", "satellite", "SensoMineR", "servr", "shape", "shinyjs", "showtext", "showtextdb", "sjlabelled", "sjmisc", "slam", "spam", "spData", "stringi", "sysfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tseries", "TTR", "viridis", "viridisLite", "webshot", "withr", "xml2", "xts", "yaml", "zoo"))
